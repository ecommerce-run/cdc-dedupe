# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: install Redis
      run: sudo apt-get install redis

    - uses: actions/checkout@v4
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: '17'
    #     distribution: 'temurin'

    - name: Set up JDK 21
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}
    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  package:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: install Redis
        run: sudo apt-get install redis

      - uses: actions/checkout@v4

      - name: Repo login
        env:
          REPO_USER: ${{ secrets.CDC_REPO_USER }}
          REPO_PAT: ${{ secrets.CDC_REPO_PAT }}
        run: |
          echo $REPO_PAT | docker login ghcr.io -u $REPO_USER --password-stdin

      - name: Build JVM image
        run: |
          docker build -t image-jvm -f ./Dockerfile .
          docker tag image-jvm ghcr.io/ecommerce-run/cdc-dedupe:latest-jvm
          docker push ghcr.io/ecommerce-run/cdc-dedupe:latest-jvm

      - name: Build Native image
        run: |
          docker build -t image-native -f ./Dockerfile.native .
          docker tag image-native ghcr.io/ecommerce-run/cdc-dedupe:latest
          docker push ghcr.io/ecommerce-run/cdc-dedupe:latest

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    # - name: Set up JDK 17
    #   uses: actions/setup-java@v4
    #   with:
    #     java-version: '17'
    #     distribution: 'temurin'
    - name: Set up JDK 21
      uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'
        distribution: 'graalvm'
        github-token: ${{ secrets.GITHUB_TOKEN }}

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
